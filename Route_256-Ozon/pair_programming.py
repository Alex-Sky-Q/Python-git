# В компании работает n разработчиков, где n — четное число. Сумасшедший менеджер решил разбить разработчиков по два.
# Он составил список разработчиков и назначил каждому из них номер по списку (от 1 до n)
# и значение ai — уровень мастерства i-го в списке разработчика.
# Команду он составляет так:
# первый разработчик в команде тот, кто идет первым в списке;
# ему в пару подбирается такой, что разница их уровней минимальна (т.е. мин. значение |ai−aj|);
# если таких кандидатов несколько, то выбирается из них тот, кто находится раньше в списке;
# эти два разработчика образуют команду и удаляются из списка.
# Например, если массив a равен [2,1,3,1,1,4], то формирование команд будет происходить следующим образом:
# назначим разработчикам номера [1,2,3,4,5,6] в соответствии с их положением в списке,
# первый среди них имеет номер 1, его уровень мастерства a1=2, подходящими (с мин. абс. разностью) являются
# разработчики с номерами 2,3,4,5, первый среди них 2, таким образом первая команда — это разработчики с номерами 1 и 2;
# оставшиеся разработчики теперь имеют номера [3,4,5,6], первый среди них 3, его уровень a3=3,
# разработчик с мин. абс. разностью только один (номер 6), таким образом команда — разработчики с номерами 3 и 6;
# оставшиеся разработчики имеют номера [4,5], первый среди них 4, его уровень a4=1, остался разработчик с номером 5,
# таким образом третья команда — разработчики с номерами 4 и 5.
# Задача — помочь сумасшедшему менеджеру промоделировать процесс разбиения на команды.
# Обратите внимание, что команды должны быть выведены в порядке, описанном выше в условии.
# - Входные данные
# Первая строка содержит одно целое число t (1≤t≤50) — количество наборов входных данных.
# Первая строка каждого набора содержит одно целое число n (2≤n≤50; n четное) — количество разработчиков.
# Вторая строка содержит n целых чисел a1,a2,…,an (1≤ai≤100), где ai — уровень мастерства i-го разработчика.
# - Выходные данные
# Для каждого набора входных данных выведите n/2 строк, i-я строка содержит пару чисел —
# номер первого и второго разработчика в i-й команде в порядке, описанном в условии.
# Выводите пустую строку между выводами для наборов входных данных.

count = int(input())

for i in range(count):
    total_devs = int(input())
    devs_level_str = input().split()
    devs_level = [int(num) for num in devs_level_str]
    devs_num_level = {num: level for num, level in enumerate(devs_level, 1)}
    for num, level in devs_num_level.items():
        if level:
            team_nums = [num]
            num_level = level
            devs_num_level[num] = ''
            level_diff = 100
            num2 = 0
            for n, l in devs_num_level.items():
                if l:
                    if abs(num_level - l) < level_diff:
                        num2 = n
                        level_diff = abs(num_level - l)
            team_nums.append(num2)
            devs_num_level[num2] = ''
            print(*team_nums)
    print('')
