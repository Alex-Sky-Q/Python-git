*Задача:
 Написать программу для подсчета количество html-тэгов на странице.


*Условия:
Программа работатет как из консоли, так и из GUI.
Для создания GUI приложения можно использвать стандартный модуль Tkinter.

Если программе переданы ключи командной строки, то работает консольная версия.
Если запуск без параметров, запускается ГУИ вариант.
Для реализации этого функционала при запуске скрипта анализировать командную строку
и запускать функцию, которая будет отвечать за вывод на косоль или создание GUI приложения.

Формат запуска из консоли
tagcounter command [options]

Возможные команды:
- get
- view

При вызове команды get или при запросе сайта через GUI факт запроса сайта
должен сохранить в лог файле.
Логирование прочитаных сайтов,  ведется в специальный файл.
Формат файла:
дата время название_сайта
           
После обработки сайта получается словарь с тегами где ключ - имя тега, значение
количество тега на сайте.
              
Полученый словарь с тегами сохраняются в sqlite базу.
Словарь с тегами сохраняется с помощью модуля pickle в одно поле базы.
В базу сохраняется столбцы:
- имя сайта (домен второго уровня)
- url
- дата проверки
- данные о тэгах

Для удобства работы, создать файл с синонимами в формате yaml.
данный файл для каждого сайта опредляет синоним, например:
ydx: yandex.ru
ggl: google.com

Синонимы используются в параметре get или view для ускорения ввода сайтов
Например вместо того, чтобы набирать 
tagcounter --get yandex.ru
Можно обойтись синонимом
tagcounter --get ydx

Для примера, к программе приложить файл с несколькими синонимами.

Если введенное сокращение найдено в файле синонимов, то использовать его, иначе загружать из сети.

Пользователи сами дложны иметь возможность добавлять, удалять данные из файла.

Сделать создать unit-тесты для ключевых функций.


*Примерное содрежание GUI окна программы:
вверху поле для ввода сайта
Ниже кнопки "Загрузить", "Показать из базы"
Ниже тестовое поле где выводятся теги и их количество
ниже строка статуса

Строка статуса необходима для отображения дополнительной информации. Например сколько времени занял
запрос сайта или произошла какая-то ошибка (например сайт не найден)



*Пример запуска консольной версии:
 Получить список тегов:
 tagcounter --get "yandex.ru"
 Синонимы должны также восприниматься программой, как и обычное имя файла.
 tagcounter --get "ydx"

 Прочитать сохраненные данные из базы:
 tagcounter --view "yandex.ru"

*Требования к оформлению пакета
Программа должна содержать файл setup.py, чтобы пакет можно было собрать с помощью команды sdist 
или установить с помощью pip.

После установки скрипт должен быть доступен для запуска через исполняемый файл tagcounter.
